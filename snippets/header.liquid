<header id="header">
    <div class="header-inner flex space-between">

        <div class="menu-drawer">
            {% unless template == "product" %}
                <button class="menu-button" @click="toggleMenu">
                    <span>{{ 'header.nav.menu' | t }}</span>
                </button>            
            {% else %}   
                <a href="javascript:history.back()" class="menu-button">
                    <span>{{ 'header.nav.back' | t }}</span>
                </a>
            {% endunless %}
        </div>

        <a class="header-title" href="/">{{ 'general.shop.title' | t | downcase }}</a>
        
        <div class="cart-button-container" @click="toggleMiniCart">
            <button class="cart-button">
                <span>
                    <template v-if="cart">
                        {{ 'header.nav.cart' | t }} (${cart.item_count})
                    </template>
                </span>
            </button>
        </div>

    </div>

    {%- comment -%} refers to miniCart func below{%- endcomment -%}
    <div id="mini-cart" :class="{ hidden: miniCart }">
        <button class="mini-cart-close-button" @click="toggleMiniCart">Close</button>
        {% render 'mini-cart' %}
    </div>
    {%- comment -%}displays if .hidden values below are false; click to close open mini-cart{%- endcomment -%}
    <div class="outside" v-if="!miniCart || !menuDrawer" @click="closeAllDrawers"></div>

</header>

<script>
    if (document.querySelector('#header')) {
        const headerCart = Vue.createApp({
            delimiters: ['${', '}'],
            data() {
                return {
                    cartData: store.state.cartState
                }
            },
            methods: {
                toggleMiniCart(){
                    toggleMiniCart.openCart()
                },
                // enables click off open mini-cart to close
                closeAllDrawers(){
                    toggleClose.closeAll();
                },
                decrement(item){
                    const data = {
                        "id": item.key,
                        "quantity": item.quantity - 1
                    }
                
                    axios.post('/cart/change.js', data)
                        .then(res => {
                            store.getCart()
                        })
                        .catch((err) => console.log(err))
                },
                increment(item){
                    const data = {
                        "id": item.key,
                        "quantity": item.quantity + 1
                    }
                
                    axios.post('/cart/change.js', data)
                        .then(res => {
                            store.getCart()
                        })
                        .catch((err) => console.log(err))
                },
                money(value){
                    if (!value) return 0;
                    return "$" + (value/100).toFixed(2);
                }                    
            },           
            computed: {
                miniCart(){
                    return miniCartState.hidden
                },
                menuDrawer(){
                    return menuState.hidden
                },
                cart(){
                    return this.cartData[0]
                }
            },
            // when header loads, gets cart data from Shopify
            created(){
                store.getCart()
            }
        }).mount('#header')
    }

</script>